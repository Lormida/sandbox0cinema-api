name: Backend CI pipeline

on:
  push:
    branches: ['main', 'develop']
  pull_request:
    branches: ['main', 'develop']

jobs:
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Cache yarn dependencies
        uses: actions/cache@v3.3.0
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile

  build:
    name: Building
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    needs: install-cache
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore yarn dependencies
        uses: actions/cache@v3.3.0
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Remove dist
        run: yarn prebuild

      - name: Generate prisma types
        run: npx prisma generate

      - name: Build project
        run: yarn build

      - name: Remove map files
        run: yarn postbuild

  test:
    name: Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    needs: build
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore yarn dependencies
        uses: actions/cache@v3.3.0
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Testing (unit tests) project
        run: yarn test:unit

      - name: Testing (unit tests) project
        run: yarn test:e2e:restart
        